1-

SELECT DISTINCT QUESTIONNAIRE.ID_QUESTIONNAIRE, QUESTIONNAIRE.TITRE 

FROM QUESTIONNAIRE, EST_PASSE_PAR, UTILISATEUR

WHERE QUESTIONNAIRE.ID_QUESTIONNAIRE=EST_PASSE_PAR.ID_QUESTIONNAIRE AND
(QUESTIONNAIRE.TYPE=0 OR (QUESTIONNAIRE.TYPE=1 AND EST_PASSE_PAR.ADRESSE_MAIL = UTILISATEUR.ADRESSE_MAIL))


2- Il manque le classement

SELECT QUESTIONNAIRE.ID_QUESTIONNAIRE, QUESTIONNAIRE.TITRE, QUESTIONNAIRE.DESCRIPTION, QUESTIONNAIRE.ADRESSE_MAIL, QUESTIONNAIRE.DATE_D_OUVERTURE, QUESTIONNAIRE.DATE_DE_FERMETURE, EST_PASSE_PAR.DATE_PARTICIPATION, EST_PASSE_PAR.NOTE

FROM QUESTIONNAIRE, EST_PASSE_PAR

WHERE QUESTIONNAIRE.ID_QUESTIONNAIRE=EST_PASSE_PAR.ID_QUESTIONNAIRE AND
EST_PASSE_PAR.ADRESSE_MAIL = UTILISATEUR.ADRESSE_MAIL


3-

SELECT QUESTIONNAIRE.ID_QUESTIONNAIRE, QUESTIONNAIRE.TITRE, QUESTIONNAIRE.DESCRIPTION, QUESTIONNAIRE.ADRESSE_MAIL, QUESTIONNAIRE.DATE_D_OUVERTURE, QUESTIONNAIRE.DATE_DE_FERMETURE, QUESTIONNAIRE.NB_QUESTIONS, SUM(APPARTIENT_A.BAREME_JUSTE_LOCAL) AS SCORE_MAX

FROM QUESTIONNAIRE, APPARTIENT_A

WHERE QUESTIONNAIRE.ID_QUESTIONNAIRE=APPARTIENT_A.ID_QUESTIONNAIRE AND
QUESTIONNAIRE.ID_QUESTIONNAIRE=1







4-

SELECT QUESTION.NUMERO_QUESTION, QUESTION.CONTENU_DE_LA_QUESTION, REPONSE_POSSIBLE.ID_REP, REPONSE_POSSIBLE.CONTENU_REP

FROM QUESTION, REPONSE_POSSIBLE

WHERE QUESTION.NUMERO_QUESTION=REPONSE_POSSIBLE.NUMERO_QUESTION


5- 

Avec NB_INVITES :


SELECT QUESTIONNAIRE.ID_QUESTIONNAIRE, QUESTIONNAIRE.TITRE, QUESTIONNAIRE.DATE_D_OUVERTURE, QUESTIONNAIRE.DATE_DE_FERMETURE, COUNT(EST_PASSE_PAR.ADRESSE_MAIL) AS NB_INVITES

FROM QUESTIONNAIRE, EST_PASSE_PAR

WHERE QUESTIONNAIRE.ADRESSE_MAIL='rémy.pinot@outlook.com' AND
QUESTIONNAIRE.ID_QUESTIONNAIRE=EST_PASSE_PAR.ID_QUESTIONNAIRE AND EST_PASSE_PAR.LIEN_PROPRE IS NOT NULL


Avec NB_PARTICIPANTS :

SELECT QUESTIONNAIRE.ID_QUESTIONNAIRE, QUESTIONNAIRE.TITRE, QUESTIONNAIRE.DATE_D_OUVERTURE, QUESTIONNAIRE.DATE_DE_FERMETURE,  COUNT(EST_PASSE_PAR.ADRESSE_MAIL) AS NB_PARTICIPANTS

FROM QUESTIONNAIRE, EST_PASSE_PAR

WHERE QUESTIONNAIRE.ADRESSE_MAIL='rémy.pinot@outlook.com' AND
QUESTIONNAIRE.ID_QUESTIONNAIRE=EST_PASSE_PAR.ID_QUESTIONNAIRE AND
EST_PASSE_PAR.DATE_PARTICIPATION IS NOT NULL 








6-

SELECT QUESTION.NUMERO_QUESTION, QUESTION.CONTENU_DE_LA_QUESTION

FROM QUESTIONNAIRE, QUESTION, APPARTIENT_A

WHERE QUESTIONNAIRE.ID_QUESTIONNAIRE=2 AND
QUESTIONNAIRE.ID_QUESTIONNAIRE=APPARTIENT_A.ID_QUESTIONNAIRE AND
APPARTIENT_A.NUMERO_QUESTION=QUESTION.NUMERO_QUESTION



7- 

SELECT REPONSE_POSSIBLE.ID_REP, REPONSE_POSSIBLE.CONTENU_REP, APPARTIENT_A.BAREME_JUSTE_LOCAL, APPARTIENT_A.BAREME_FAUX_LOCAL, QUESTION.TAG_QUESTION

FROM QUESTION, REPONSE_POSSIBLE, APPARTIENT_A

WHERE QUESTION.NUMERO_QUESTION=1 AND
QUESTION.NUMERO_QUESTION=APPARTIENT_A.NUMERO_QUESTION AND
QUESTION.NUMERO_QUESTION=REPONSE_POSSIBLE.NUMERO_QUESTION





8-

INSERT INTO QUESTIONNAIRE VALUES ("titre", "description", 2019-03-24, 2019-03-25, "Lien unique", "", 3, "rémy.pinot@outlook.com", ..)

INSERT INTO QUESTIONS VALUES (..., TAG_QUESTION="#PHP",...)

INSERT INTO REPONSE_POSSIBLE VALUES (.....)         

Les espaces vides seront remplis automatiquement avec les variables PHP.                        
    








                          
9- 

Nombre de questionnaires :

SELECT COUNT(ID_QUESTIONNAIRE) AS NOMBRE_QUESTIONNAIRE
FROM QUESTIONNAIRE


Nombre de utilisateurs :

SELECT COUNT(MATRICULE) AS NOMBRE_UTILISATEUR
FROM UTILISATEUR


Nombre de questions :

SELECT COUNT(NUMERO_QUESTION) AS NOMBRE_QUESTION
FROM QUESTION




10- Pour un questionnaire et un utilisateur donné

SELECT *, COUNT(POINT_QUESTION) AS TOTAL_QUESTIONNAIRE FROM


(SELECT REPONSE_CHOISIE.*,
(CASE
	WHEN REPONSE_CHOISIE.VRAI_OU_FAUX=0 THEN APPARTIENT_A.BAREME_FAUX_LOCAL
    	ELSE APPARTIENT_A.BAREME_JUSTE_LOCAL
END) AS POINT_QUESTION

FROM REPONSE_CHOISIE, APPARTIENT_A

WHERE REPONSE_CHOISIE.ADRESSE_MAIL="arthur.aumonierdu33@hotmail.fr" AND
 REPONSE_CHOISIE.NUMERO_QUESTION=APPARTIENT_A.NUMERO_QUESTION AND
APPARTIENT_A.ID_QUESTIONNAIRE=1

ORDER BY REPONSE_CHOISIE.NUMERO_QUESTION) AS T1

GROUP BY ID_REPONSE
